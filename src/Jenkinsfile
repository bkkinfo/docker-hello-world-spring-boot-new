node{
    def buildNo = BUILD_NUMBER
    stage('SCM Checkout'){
        git url: 'https://github.com/bkkinfo/ocker-hello-world-spring-boot.git'
    }
    try{
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "maven", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
      
     }
    stage('SonarQube Analysis'){
        def mavenHome = tool name: 'maven' , type: 'maven'
        //withSonarQubeEnv('sonar'){
            sh "${mavenHome}/bin/mvn sonar:sonar -Dsonar.projectKey=sonar -Dsonar.host.url=http://52.143.7.186/bishnu/sonarqube/ -Dsonar.login=6cc399c3f90cb1fdccd0a7a80c07a5550b09dec3"
        }
    }
    stage("JIRA"){
	 def testIssue = [fields: [ project: [key: 'JIR'],
                                 summary: "New Build Trigger in Jenkins- ${buildNo}",
                                 description: "New build created from jenkin, Build Number ${buildNo}",
                                 issuetype: [name : 'Task']]]

      response = jiraNewIssue issue: testIssue, site: 'JIRA'

      echo response.successful.toString()
      echo response.data.toString()
             
	}
    }
    catch (Exception err) {
    stage("Build Failed OOPS!!!!")
        currentBuild.result = 'FAILURE'
                def testIssue = [fields: [ project: [key: 'JIR'],
                                 summary: "Failure Build number :${buildNo} ",
                                 description: "Build Failed : Build Number ${buildNo}",
                                 issuetype: [name : 'Bug']]]

      response = jiraNewIssue issue: testIssue, site: 'JIRA'

      echo response.successful.toString()
      echo response.data.toString()
    }
        
  }
